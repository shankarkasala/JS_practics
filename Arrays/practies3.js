function getAge() {
  // 'use strict';
  age = 21;
  console.log(age);
}

getAge();

const sum = eval("10*10+5");
console.log(sum);

//The data stored in sessionStorage is removed after closing the tab.
sessionStorage.setItem("cool_secret", 123);

const obj = { a: "one", b: "two", a: "three" };
console.log(obj);

for (let i = 1; i < 5; i++) {
  if (i === 3) continue;
  console.log(i);
}

//String is a built-in constructor, which we can add properties to. I just added a method to its prototype. Primitive strings are automatically converted into a string object, generated by the string prototype function. So, all strings (string objects) have access to that method!
String.prototype.giveLydiaPizza = () => {
  return "Just give Lydia pizza already!";
};

const name = "Lydia";

console.log(name.giveLydiaPizza());

const a = {};
const b = { key: "b" };
const c = { key: "c" };

a[b] = 123;
a[c] = 456;

console.log(a[b], a[c]);

const person = { name: "Lydia" };

function sayHi(age) {
  return `${this.name} is ${age}`;
}

console.log(sayHi.call(person, 21));
console.log(sayHi.bind(person, 21));
